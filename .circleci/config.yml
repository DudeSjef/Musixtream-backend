#file: noinspection YAMLSchemaValidation
version: 2.1
orbs:
  azure-aks: circleci/azure-aks@0.3.0
  kubernetes: circleci/kubernetes@1.3.1
jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:21.0.2
    steps:
      - checkout
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          name: Restore cache
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Grade build
          command: ./gradlew clean build
      - save_cache:
          name: Store cache
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.gradle/caches
  build-docker-image:
    docker:
      - image: cimg/openjdk:21.0.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Grade build
          command: ./gradlew clean build
      - run:
          name: Build and push Docker image
          command: |
            docker build -t $DOCKER_LOGIN/$APP_NAME:latest .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/$APP_NAME:latest
  aks-deploy:
    docker:
      - image: cimg/openjdk:21.0.2
    parameters:
      cluster-name:
        description: |
          Name of the AKS cluster
        type: string
      resource-group:
        description: |
          Resource group that the cluster is in
        type: string
    steps:
      - checkout
      - run:
          name: Pull Updated code from repo
          command: |
            git pull origin $CIRCLE_BRANCH
      - azure-aks/update-kubeconfig-with-credentials:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          perform-login: true
          resource-group: << parameters.resource-group >>
      - kubernetes/create-or-update-resource:
          resource-file-path: kubernetes/$APP_NAME.yaml
          resource-name: kustomization/$APP_NAME
workflows:
  build-test-deploy:
    jobs:
      - build-and-test
      - build-docker-image:
          context:
            - Musixtream
          requires:
            - build-and-test
      - aks-deploy:
          context:
            - Musixtream
          cluster-name: $CLUSTER_NAME
          resource-group: $RESOURCE_GROUP
          requires:
            - build-docker-image
